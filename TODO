-npm publish
	-https://www.freecodecamp.org/news/how-to-create-and-publish-your-first-npm-package/
-fix parser wenn schließende klammer bei functioncall nicht in neuer zeile
	myFunc(
		§someValue§)
-functionTypeLiteralParser interpretiert
	(): () => ()
	als type und nicht als function mit returntype
	der type ist dabei () => ()
	1. [(): ()] => ()
	2. (): [() => ()]
	?sollte immer wie in 1. interpretiert werden?
-debug experience vebessern
	?sourcemap
	?intermediate js files direkt mit node ausführbar
-doku
	-https://docusaurus.io/
	-en übersetzung vgl https://docusaurus.io/docs/i18n/tutorial
?spread operator für branching value
	-branching operator spreadet nicht mehr implizit
?tryAssignParams mit rest dictionary
?fallback bei definition
?was tun mit typeGuard, fallback bei destructuring import
?alias bei rest parameter
	?rest arg mit parameter namen übergeben
?anonyme parameter mit _/_1, _2 etc
	-anonymer parameter für type parametered functions
	?rest args anonym
?shared code? libraries?
?dereference parameterReference in getTypeError oder infer paramterReference type mit path?
?type inference: infer pure function call return type wenn alle argumente statisch bekannt durch aufruf der funktion
	-vgl. type-checking-test.jul Zeile 50 vs 51 variable type
	?wie erkennt man dass ein argument statisch bekannt ist
	?pure functions kennzeichnen
		?wie
-type inference: infer branching argument type im sub scope der branch functions narrowed by function parameter type
-examples sortieren, aufräumen, organisieren?
-homepage
	?deutsch vs englisch
	-title navbar
		-home, roadmap, documentation
?FractionValueType
	-für custom typeToString
	-alternativ custom typeToString für Fraction structured values
?typeToString mit custom types, custom toString?
?function as type
	-1. check args assignable
	-2. check returnValue = true
?catchAll default case in branching mit () oder Any?
-taschenrechner demo app
?fix dictionary value als type typeChecking?
	?wie soll sich das verhalten? wird das gebraucht?
?typeChecking: return union mit Error, oder compiler error
	?compiler error wenn assignment unmöglich, error union type wenn Fehler möglich?
-virtual document für core-lib.jul
	-https://code.visualstudio.com/api/extension-guides/virtual-documents
-emitter mit parseExpression statt checkedExpression, checkedExpression entfernen
-compile yaml to js wegen rundungsfehler bei großen zahlen
	-https://github.com/nodeca/js-yaml/blob/2b5620ed8f03ba0df319fe7710f6d7fd44811742/examples/int_type_override.js